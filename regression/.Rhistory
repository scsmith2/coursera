setwd("C:/users/scott_admin/documents/git_repo/coursera/regression")
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n ++ mean(x) ^ 2 / ssx ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t})")
rownames(coefTable) <- c("(Intercept)", "x")
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t})")
rownames(coefTable) <- c("(Intercept)", "x")
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t})")
rownames(coefTable) <- c("(Intercept)", "x")
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t})")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t})")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
print("Alternate Approach")
fit <- lm(y~x)
summary(fit)$coefficients
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
print("Alternate Approach")
fit <- lm(y~x)
summary(fit)$coefficients
summary(fit)
library(UsingR); data(diamond)
y<- diamond$price; x <- diamond$carat; n <- length(y)
beta1 <- cor(y,x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x - mean(x))^2)
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
print("Alternate Approach")
fit <- lm(y~x)
summary(fit)$coefficients
print("Getting Confidence Interval")
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[1,2]
newdata <- data.frame(x.Vals)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
plot(x, y, frame=FALSE, xlab = "Carat", ylab  = "Dollars", pch = 21, col = "black", bg = "lightblue", cex = 2)
abline(fit, lwd = 2)
lines(xVals, p1[,2]); lines(xVals, p1[,3])
lines(xVals, p2[,2]); lines(xVals, p2[,3])
newdata <- data.frame(x = xVals)
p1 <- predict(fit, newdata, interval = ("confidence"))
p2 <- predict(fit, newdata, interval = ("prediction"))
plot(x, y, frame=FALSE, xlab = "Carat", ylab  = "Dollars", pch = 21, col = "black", bg = "lightblue", cex = 2)
abline(fit, lwd = 2)
lines(xVals, p1[,2]); lines(xVals, p1[,3])
lines(xVals, p2[,2]); lines(xVals, p2[,3])
?pt
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
plot(x,y)
fit <- lm(y~x)
?lm
fit <- lm(y~0*x)
fit <- lm(y~)
fit <- lm(y~1)
summary(fit)
abline(.63556,0)
predict.lm(y~1)
predict.lm
summary(fit
)
p1 <- predict(fit)
p1
sumCoef <- summary(fit)$coefficient
sumCoef
?confint
summary(fit)
fit <- lm(y~x)
summary(fit)
load(UsingR); data(mtcars)
load(UsingR)
library(UsingR); data(mtcars)
colnames(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
summary(fit)
confint(fit)
confint(predict(fit))
predict(fit)
predict(confint(fit))
predict(fit,interval="predict")
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1)*qt(.975, df=fit$df) * sumCoef[2,2]
plot(mtcars$wt,mtcars$mpg)
colnames(sumCoef)
sumCoef
summary(fit)
newdata <- data.frame(x = mean(mtcars$wt))
predict(fit,mean(mtcars$wt),interval = ("confidence"))
abline(fit,lwd=2)
abline(mean(mtcars$wt),1)
abline(1,mean(mtcars$wt))
abline(Inf,mean(mtcars$wt))
help mtcars
?mtcars
newdata <- mean(mtcars$wt)
predict(fit,newdata, interval = ("confidence"))
fit2 <- lm(mtcars$mpg ~ mtcars$wt/2)
wt2 <- mtcars$wt/
2
fit2<- lm(mtcars$mpg ~ wt2)
plot(wt2, mtcars$mpg)
summary(fit2)
confint(fit2)
confint(fit)
rm(fit,fit2
)
rm()
rm(.)
rm(all)
?rm
rm(...)
remove(almost)
fit1 <- lm(mtcars$mpg ~ mtcars$wt)
fit2 <- lm(mtcars$mpg ~ 1)
summary(fit1)
summary(fit1)
summary(fit1)$coefficients
summary(fit1)
summary(fit2)
sum1 <- sum((predict(fit1)-mean(mtcars$mpg))^2)
sum2 <- sum((predict(fit2)-mean(mtcars$mpg))^2)
sum2/sum1
r1 <- sum(fit1$residuals^2)
r2 <- sum(fit2$residuals^2)
r2/r1
r1/r2
exit
