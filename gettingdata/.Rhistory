install.packages(c("RCurl", "twitteR", "ROAuth"))
rm(list = ls())
library(twitteR)
library(ROAuth)
library(RCurl)
#download.file(url="http://curl.haxx.se/ca/cacert.pem",
#              destfile="cacert.pem")
consumerKey <- "HvMtDAFdUihxp3TSY2Fol1c5d"
consumerSecret <- "ZahWuwPbmo2yAirVjlUsP3v1n3ei8uvlZNLKLacLvjqSToxCVE"
requestURL <- as.character("https://api.twitter.com/oauth/request_token")
accessURL <- as.character("https://api.twitter.com/oauth/access_token")
authURL <- as.character("https://api.twitter.com/oauth/authorize")
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
curl <- getCurlHandle()
options(RCurlOptions = list(cainfo = "cacert.pem")
twitCred$handshake(cainfo='cacert.pem')
h <- getCurlHandle(cainfo="cacert.pem")
twitCred$handshake(curl=h)
options(RCurlOptions = list(cainfo = "cacert.pem"))
twitCred$handshake(cainfo='cacert.pem')
h <- getCurlHandle(cainfo="cacert.pem")
twitCred$handshake(curl=h)
setwd("C:/users/scott_admin/documents/git_repo/twitter/twitter")
rm(list = ls())
library(twitteR)
library(ROAuth)
library(RCurl)
download.file(url="http://curl.haxx.se/ca/cacert.pem",
destfile="cacert.pem")
consumerKey <- "HvMtDAFdUihxp3TSY2Fol1c5d"
consumerSecret <- "ZahWuwPbmo2yAirVjlUsP3v1n3ei8uvlZNLKLacLvjqSToxCVE"
requestURL <- as.character("https://api.twitter.com/oauth/request_token")
accessURL <- as.character("https://api.twitter.com/oauth/access_token")
authURL <- as.character("https://api.twitter.com/oauth/authorize")
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
curl <- getCurlHandle()
options(RCurlOptions = list(cainfo = "cacert.pem"))
twitCred$handshake(cainfo='cacert.pem')
h <- getCurlHandle(cainfo="cacert.pem")
twitCred$handshake(curl=h)
searchTwitter("machine learning",n=10)
registerTwitterOAuth(twitCred)
twitCred$handshake()
twitCred$handshake()
setwd("C:/users/scott_admin/documents/git_repo/coursera/gettingdata")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ","acs.csv")
data <- read.csv("acs.csv")
data <- read.csv("acs.csv")
str(data)
values <- data$VAL
above1M <- sum(values > 1000000)
above1M <- sum(values > 1000000,na.rm=TRUE)
print(values)
above1M <- sum(values == 24)
above1M <- sum(values == 01)
above1M <- sum(values == as.integer(24))
print(above1M)
above1M <- sum(values == as.integer(24),na.rm=TRUE)
values <- values[!NA]
values <- data$VAL
values <- values[!=NA]
values <- values[!is.na(values)]
values
sum(values=24)
sum(values=21)
sum(values==21)
sum(values==24)
fes <- data$FES
fes
colIndex <- 2:3
rowindex <- 1:4
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex = colIndex,
rowIndex = rowIndex)
library(xlsx)
install.package("xlsx")
install.package()
install.packages("xlsx")
library(xlsx)
colIndex <- 2:3
rowindex <- 1:4
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex = colIndex,
rowIndex = rowIndex)
library(xlsx)
colIndex <- 2:3
rowIndex <- 1:4
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex = colIndex,
rowIndex = rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
dat
library(XML)
install.packages("XML")
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc <- xmlTreeParse(fileURL)
library(XML)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[1]
rootNode[[1]]
xmsSApply(rootNode,zip)
xmlSApply(rootNode,zip)
zips <- xpathSApply(doc,"//div/zipcode",xmlValue)
names(rootNode)
names(rootNode[1])
names(rootNode[[1]])
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(doc)
names(rootNode)
library(XML)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(doc)
rootNode
zips <- xmlSApply(zipcode,xmlValue)
xmlSApply(rootNode,xmlValue)
stuff <- xmlSApply(rootNode,xmlValue)
stuff
str(stuff)
class(stuff)
str_count(stuff,"21231")
library(stringr)
str_count(stuff,"21231")
download.file"("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","acs2.csv")
DT <- fread("acs2.csv")
stuff <- xmlSApply(rootNode,xmlValue)
install.packages("data.table")
library(data.table)
download.file"("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","acs2.csv")
DT <- fread("acs2.csv")
library(data.table)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","acs2.csv")
DT <- fread("acs2.csv")
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
library(xlsx)
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",
sheetIndex=1,
colIndex = colIndex,
rowIndex = rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
